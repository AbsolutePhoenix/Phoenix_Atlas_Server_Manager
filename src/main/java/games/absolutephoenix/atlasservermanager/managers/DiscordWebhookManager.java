package games.absolutephoenix.atlasservermanager.managers;

import games.absolutephoenix.atlasservermanager.utils.HelperMethods;
import games.absolutephoenix.atlasservermanager.utils.frameworks.DiscordWebhookFramework;

import java.awt.*;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.TimeZone;

public class DiscordWebhookManager {
    public static void SendWebhook(String webhookURL, String username, String avatar, String title, String content, boolean thumnail, String x, String y, int port, String startMethod, Color color) throws IOException {
        DiscordWebhookFramework discordWebhook = new DiscordWebhookFramework(webhookURL);
        discordWebhook.setUsername(username);
        discordWebhook.setAvatarUrl(avatar);
        discordWebhook.addEmbed(Embed(title, content, thumnail, x, y, port, startMethod, color));
        try {
            discordWebhook.execute();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static DiscordWebhookFramework.EmbedObject Embed(String title, String content, boolean thumbnail, String x, String y,  int port, String startMethod, Color color) throws IOException {
        TimeZone tz = TimeZone.getTimeZone("UTC");
        DateFormat df = new SimpleDateFormat("yyy-MM-dd'T'HH:mm:ss.SSS'Z'"); // Quoted "Z" to indicate UTC, no timezone offset
        df.setTimeZone(tz);
        String time = df.format(new Date());

        DiscordWebhookFramework.EmbedObject embedObject = new DiscordWebhookFramework.EmbedObject();
        embedObject.setTitle(title);
        embedObject.setDescription(content);
        embedObject.setFooter("Generated by Complete Atlas Server Manager" , null);
        if (thumbnail)
            embedObject.setThumbnail("https://b.thumbs.redditmedia.com/8in3lDndYdhG6GA3w0GdbiUZAOd0KY2L9_xD1_e-D0M.png");
        embedObject.addField("X-Position", x, true);
        embedObject.addField("Y-Position", y, true);
        embedObject.addField("IP/Port", HelperMethods.getExternalIp() + ":" + port, true);
        embedObject.addField("Load Method", startMethod, false);
        embedObject.setColor(color);
        embedObject.setTimestamp(time);
        return embedObject;
    }
}
